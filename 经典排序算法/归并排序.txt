class Solution {
    public void countRangeSum(long[] sum) {
        Merge(sum, lower, upper, 0, sum.length-1);
    }
    private void Merge(long[] sum, int left, int right){
        if(left == right){
            return ;
        }
        int mid = left + (right-left)/2;
        Merge(sum, left, mid);
        Merge(sum, mid + 1, right);
        int[] sorts = new int[right - left + 1];
        int index = 0;
        int p1 = left, p2 = mid + 1;
        while(p1 <= mid || p2 <= right){
            if(p1 > mid){
                sorts[index++] = (int)sum[p2++];
            }else if(p2 > right){
                sorts[index++] = (int)sum[p1++];
            }else{
                if(sum[p1] < sum[p2]){
                    sorts[index++] = (int)sum[p1++];
                }else{
                    sorts[index++] = (int)sum[p2++];
                }
            }
        }
        for(int i = 0; i < sorts.length; i++){
            sum[left++] = sorts[i];   
        }
    }
}